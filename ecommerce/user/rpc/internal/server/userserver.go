// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3
// Source: user.proto

package server

import (
	"context"

	"github.com/fyerfyer/e-commerce-system/ecommerce/user/rpc/internal/logic"
	"github.com/fyerfyer/e-commerce-system/ecommerce/user/rpc/internal/svc"
	"github.com/fyerfyer/e-commerce-system/ecommerce/user/rpc/user"
)

type UserServer struct {
	svcCtx *svc.ServiceContext
	user.UnimplementedUserServer
}

func NewUserServer(svcCtx *svc.ServiceContext) *UserServer {
	return &UserServer{
		svcCtx: svcCtx,
	}
}

func (s *UserServer) Register(ctx context.Context, in *user.RegisterRequest) (*user.RegisterResponse, error) {
	l := logic.NewRegisterLogic(ctx, s.svcCtx)
	return l.Register(in)
}

func (s *UserServer) Login(ctx context.Context, in *user.LoginRequest) (*user.LoginResponse, error) {
	l := logic.NewLoginLogic(ctx, s.svcCtx)
	return l.Login(in)
}

func (s *UserServer) GetAddresses(ctx context.Context, in *user.GetAddressesRequest) (*user.GetAddressesResponse, error) {
	l := logic.NewGetAddressesLogic(ctx, s.svcCtx)
	return l.GetAddresses(in)
}

func (s *UserServer) AddAddress(ctx context.Context, in *user.AddAddressRequest) (*user.AddAddressResponse, error) {
	l := logic.NewAddAddressLogic(ctx, s.svcCtx)
	return l.AddAddress(in)
}

func (s *UserServer) EditAddress(ctx context.Context, in *user.EditAddressRequest) (*user.Empty, error) {
	l := logic.NewEditAddressLogic(ctx, s.svcCtx)
	return l.EditAddress(in)
}

func (s *UserServer) DeleteAddress(ctx context.Context, in *user.DeleteAddressRequest) (*user.Empty, error) {
	l := logic.NewDeleteAddressLogic(ctx, s.svcCtx)
	return l.DeleteAddress(in)
}

func (s *UserServer) SetDefaultAddress(ctx context.Context, in *user.SetDefaultAddressRequest) (*user.Empty, error) {
	l := logic.NewSetDefaultAddressLogic(ctx, s.svcCtx)
	return l.SetDefaultAddress(in)
}

func (s *UserServer) GetLoginHistory(ctx context.Context, in *user.GetLoginHistoryRequest) (*user.GetLoginHistoryResponse, error) {
	l := logic.NewGetLoginHistoryLogic(ctx, s.svcCtx)
	return l.GetLoginHistory(in)
}

func (s *UserServer) GetUserInfo(ctx context.Context, in *user.GetUserInfoRequest) (*user.GetUserInfoResponse, error) {
	l := logic.NewGetUserInfoLogic(ctx, s.svcCtx)
	return l.GetUserInfo(in)
}

func (s *UserServer) GetCollection(ctx context.Context, in *user.GetCollectionRequest) (*user.GetCollectionResponse, error) {
	l := logic.NewGetCollectionLogic(ctx, s.svcCtx)
	return l.GetCollection(in)
}

func (s *UserServer) AddCollection(ctx context.Context, in *user.AddCollectionRequest) (*user.Empty, error) {
	l := logic.NewAddCollectionLogic(ctx, s.svcCtx)
	return l.AddCollection(in)
}

func (s *UserServer) EditCollection(ctx context.Context, in *user.EditCollectionRequest) (*user.Empty, error) {
	l := logic.NewEditCollectionLogic(ctx, s.svcCtx)
	return l.EditCollection(in)
}

func (s *UserServer) DeleteCollection(ctx context.Context, in *user.DeleteCollectionRequest) (*user.Empty, error) {
	l := logic.NewDeleteCollectionLogic(ctx, s.svcCtx)
	return l.DeleteCollection(in)
}
