// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3
// Source: reply.proto

package server

import (
	"context"

	"github.com/fyerfyer/e-commerce-system/ecommerce/reply/rpc/internal/logic"
	"github.com/fyerfyer/e-commerce-system/ecommerce/reply/rpc/internal/svc"
	"github.com/fyerfyer/e-commerce-system/ecommerce/reply/rpc/reply"
)

type ReplyServiceServer struct {
	svcCtx *svc.ServiceContext
	reply.UnimplementedReplyServiceServer
}

func NewReplyServiceServer(svcCtx *svc.ServiceContext) *ReplyServiceServer {
	return &ReplyServiceServer{
		svcCtx: svcCtx,
	}
}

func (s *ReplyServiceServer) GetReplies(ctx context.Context, in *reply.GetRepliesRequest) (*reply.GetRepliesResponse, error) {
	l := logic.NewGetRepliesLogic(ctx, s.svcCtx)
	return l.GetReplies(in)
}

func (s *ReplyServiceServer) GetReply(ctx context.Context, in *reply.GetReplyRequest) (*reply.Reply, error) {
	l := logic.NewGetReplyLogic(ctx, s.svcCtx)
	return l.GetReply(in)
}

func (s *ReplyServiceServer) AddReply(ctx context.Context, in *reply.AddReplyRequest) (*reply.Empty, error) {
	l := logic.NewAddReplyLogic(ctx, s.svcCtx)
	return l.AddReply(in)
}

func (s *ReplyServiceServer) EditReply(ctx context.Context, in *reply.EditReplyRequest) (*reply.Empty, error) {
	l := logic.NewEditReplyLogic(ctx, s.svcCtx)
	return l.EditReply(in)
}

func (s *ReplyServiceServer) DeleteReply(ctx context.Context, in *reply.DeleteReplyRequest) (*reply.Empty, error) {
	l := logic.NewDeleteReplyLogic(ctx, s.svcCtx)
	return l.DeleteReply(in)
}
